{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleButton","pos","step","max","loop","move","setState","this","props","images","frameSize","itemWidth","animationDuration","infinite","stepSize","maxPosition","length","className","style","width","map","img","index","transform","transition","src","alt","type","onClick","disabled","Component","App","action","method","htmlFor","name","id","defaultValue","min","onChange","e","Number","currentTarget","value","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d62cf6e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handleButton = (pos: number, step: number, max: number, loop: boolean) => {\n    let move = pos + step;\n\n    if (step > 0) {\n      if (move === step && loop) {\n        move = max;\n      }\n\n      if (move > 0) {\n        move = 0;\n      }\n    }\n\n    if (step < 0) {\n      if ((move === max + step) && loop) {\n        move = 0;\n      }\n\n      if (move < max) {\n        move = max;\n      }\n    }\n\n    this.setState({ position: move });\n  };\n\n  render() {\n    const { position } = this.state;\n\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const stepSize = step * itemWidth;\n    const maxPosition = -itemWidth * (images.length - frameSize);\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <ul\n            className=\"Carousel__list\"\n            style={{ width: `${frameSize * itemWidth}px` }}\n          >\n            {images.map((img, index) => (\n              <li\n                className=\"Carousel__item\"\n                style={{\n                  transform: `translateX(${position}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n                key={img}\n              >\n                <img\n                  src={img}\n                  alt={`${index + 1}`}\n                  style={{ width: itemWidth }}\n                />\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className=\"buttons__button\"\n              onClick={() => (\n                this.handleButton(position, stepSize, maxPosition, infinite)\n              )}\n              disabled={position === 0 && !infinite}\n            >\n              {'<'}\n            </button>\n            <button\n              type=\"button\"\n              className=\"buttons__button\"\n              data-cy=\"next\"\n              onClick={() => (\n                this.handleButton(position, -stepSize, maxPosition, infinite)\n              )}\n              disabled={position === maxPosition && !infinite}\n            >\n              {'>'}\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          action=\"#\"\n          method=\"post\"\n          className=\"form\"\n        >\n          <div className=\"form__container\">\n            <label htmlFor=\"stepId\">\n              {'Step: '}\n            </label>\n            <label htmlFor=\"frameSizeId\">\n              {'Frame size: '}\n            </label>\n            <label htmlFor=\"itemWidthId\">\n              {'Item width: '}\n            </label>\n            <label htmlFor=\"animationDurationId\">\n              {'Animation duration: '}\n            </label>\n            <label htmlFor=\"infiniteId\">\n              {'Infinite: '}\n            </label>\n          </div>\n          <div className=\"form__container\">\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              defaultValue={3}\n              step={1}\n              min={1}\n              max={images.length}\n              onChange={(e) => (\n                this.setState({ step: Number(e.currentTarget.value) })\n              )}\n            />\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSizeId\"\n              defaultValue={3}\n              step={1}\n              max={images.length}\n              min={1}\n              onChange={(e) => (\n                this.setState({ frameSize: Number(e.currentTarget.value) })\n              )}\n            />\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemWidthId\"\n              defaultValue={130}\n              min={100}\n              max={200}\n              step={10}\n              onChange={(e) => (\n                this.setState({ itemWidth: Number(e.currentTarget.value) })\n              )}\n            />\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              defaultValue={1000}\n              step={500}\n              min={500}\n              onChange={(e) => (\n                this.setState(\n                  { animationDuration: Number(e.currentTarget.value) },\n                )\n              )}\n            />\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infiniteId\"\n              onChange={(e) => (\n                this.setState({ infinite: e.currentTarget.checked })\n              )}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}